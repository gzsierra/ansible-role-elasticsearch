---
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Install Elasticsearch.
  package:
    name: elasticsearch
    state: "{{ elasticsearch_package_state }}"

#### START SECURITY
- name: Check if elastic host cert file exists
  stat: 
    path: "/etc/elasticsearch/{{ inventory_hostname }}.p12"
  register: elastic_host_cert

- name: Secure elasticsearch
  copy:
    src: "{{ elastic_ca }}"
    dest: "/etc/elasticsearch/{{ elastic_ca_file }}"
    owner: "elasticsearch"
    group: "elasticsearch"
    mode: 0600
  tags: secure
  when: elastic_host_cert.stat.exists == False

- name: Create host certificate
  command: "{{ elastic_bin }}/elasticsearch-certutil cert 
                              -ca /etc/elasticsearch/{{ elastic_ca_file }} 
                              --name {{ inventory_hostname }} 
                              --dns {{ inventory_hostname }} 
                              --ip {{ ansible_host }} 
                              --ca-pass \"{{ ca_pass }}\" 
                              --pass \"{{ cert_pass }}\" 
                              --out /etc/elasticsearch/{{ inventory_hostname }}.p12"
  args:
    chdir: "/etc/elasticsearch"
  tags: secure
  when: elastic_host_cert.stat.exists == False

- name: Change file owner
  file:
    path: /etc/elasticsearch/{{ inventory_hostname }}.p12
    owner: elasticsearch

- name: Remove ca
  file:
    path: "/etc/elasticsearch/{{ elastic_ca_file }}"
    state: absent
  tags: secure
  when: elastic_host_cert.stat.exists == False
#### END SECURITY

- name: Configure Elasticsearch.
  template:
    src: "{{ item.file }}"
    dest: "/etc/elasticsearch/{{ item.dest }}"
    owner: elasticsearch
    group: elasticsearch
    mode: 0660
  loop:
    - { file: "{{ elasticsearch_config_template }}", dest: "elasticsearch.yml"}
    - { file: "jvm.options.j2", dest: "jvm.options"}
  notify: restart elasticsearch

- name: Force a restart if configuration has changed.
  meta: flush_handlers

- name: Start Elasticsearch.
  service:
    name: elasticsearch
    state: "{{ elasticsearch_service_state }}"
    enabled: "{{ elasticsearch_service_enabled }}"

- name: Make sure Elasticsearch is running before proceeding.
  wait_for:
    host: "{{ elasticsearch_network_host }}"
    port: "{{ elasticsearch_http_port }}"
    delay: 3
    timeout: 300
